{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Lizzy1616/Final-module-6/blob/main/model%20practice\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 27,
      "metadata": {
        "id": "wDEh8q9p99-0"
      },
      "outputs": [],
      "source": [
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "ifEyOtGwLxuz"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv('flight.csv')"
      ],
      "metadata": {
        "id": "16GaCTAIL5_H"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(df.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8mn8xHv9L_6d",
        "outputId": "fdf7702e-8bad-4a48-b491-27f11a498b21"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Month  On_Time_Percentage Adverse Weather\n",
            "0  January                  85             Yes\n",
            "1  Febuary                  80              No\n",
            "2    March                  88              No\n",
            "3    April                  90              No\n",
            "4      May                  87             Yes\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df.describe())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OS9PaBLKMFYP",
        "outputId": "b58d9c08-e97e-4539-9f4a-8310488dcf40"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "       On_Time_Percentage\n",
            "count           12.000000\n",
            "mean            86.500000\n",
            "std              4.421024\n",
            "min             78.000000\n",
            "25%             84.500000\n",
            "50%             87.500000\n",
            "75%             90.000000\n",
            "max             92.000000\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Month = [\"January\", \"Febuary\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]"
      ],
      "metadata": {
        "id": "KBlVlXUbMLGa"
      },
      "execution_count": 34,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "On_Time_Percentage = [85, 80, 88, 90, 87, 92, 85, 78, 83, 90, 89, 91]"
      ],
      "metadata": {
        "id": "_nx6yVSIMPu5"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "id": "WKFKpGbqMXoc",
        "outputId": "72a311b4-cac9-4801-af73-2d262f9620a0"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 0 Axes>"
            ]
          },
          "metadata": {},
          "execution_count": 35
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(df[\"Month\"], df[\"On_Time_Percentage\"], marker=\"o\", linestyle=\"-\", color=\"b\")\n",
        "plt.title(\"On_Time_Percentage\", fontsize=14)\n",
        "plt.xlabel(\"Month\", fontsize=12)\n",
        "plt.ylabel(\"On_Time_Percentage (%)\", fontsize=12)\n",
        "plt.ylim(0, 100)\n",
        "plt.xticks(rotation=45)\n",
        "plt.grid()\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "\n",
        ""
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "dfJjypaQMdW4",
        "outputId": "e0443211-7eb6-4bf8-b00b-0a5c395291ec"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "clustering_data_url = 'https://docs.google.com/spreadsheets/d/1H753saUHzNYbyBwLifcXe-92yXG9kM1mWh5Xv9Rmlyk/edit?usp=drive_link'"
      ],
      "metadata": {
        "id": "hP1GArZlCLzS"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "metadata": {
        "id": "14oaBGd7ChPg"
      },
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "iaV6ouEsCSX0"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv('Clustering.csv')"
      ],
      "metadata": {
        "id": "YfJbYNfhVZCp"
      },
      "execution_count": 63,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(df.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rV1lVdkwVrd1",
        "outputId": "d85d6aad-72c4-4a6b-e30c-a19fb0bf5f5c"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Flight No  Distance  Average Delay  Passenger Load\n",
            "0        1.0     500.0           10.0            85.0\n",
            "1        2.0     300.0            5.0            90.0\n",
            "2        3.0    1500.0           25.0            70.0\n",
            "3        4.0     750.0            0.0            95.0\n",
            "4        5.0    1100.0           15.0            60.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.cluster import KMeans"
      ],
      "metadata": {
        "id": "XwgfMTbhPcmq"
      },
      "execution_count": 65,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler"
      ],
      "metadata": {
        "id": "foYzh8omPjW3"
      },
      "execution_count": 66,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Flight_No = [1, 2, 3, 4, 5, 6, 7, 8]"
      ],
      "metadata": {
        "id": "Yi4-4URSPpd1"
      },
      "execution_count": 67,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Distance = [500, 300, 1500, 750, 1100, 400, 600, 900]"
      ],
      "metadata": {
        "id": "VcLynHu2QylK"
      },
      "execution_count": 68,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Average_Delay = [10, 5, 25, 0, 15, 20, 5, 30]"
      ],
      "metadata": {
        "id": "pAFm8wj9RTq5"
      },
      "execution_count": 69,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Passenger_Load = [85, 90, 70, 95, 60, 80, 75, 50]"
      ],
      "metadata": {
        "id": "mjC0INO_SfVK"
      },
      "execution_count": 70,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.DataFrame({\n",
        "    \"Flight_No\": Flight_No,\n",
        "    \"Distance\": Distance,\n",
        "    \"Average_Delay\": Average_Delay,\n",
        "    \"Passenger_Load\": Passenger_Load\n",
        "})"
      ],
      "metadata": {
        "id": "5FMCqiLBSxqE"
      },
      "execution_count": 71,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "scaler = StandardScaler()\n",
        "normalized_data = scaler.fit_transform(df[[\"Distance\", \"Average_Delay\", \"Passenger_Load\"]])"
      ],
      "metadata": {
        "id": "X5UC6t_4TWJy"
      },
      "execution_count": 72,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "kmeans = KMeans(n_clusters=3, random_state=42)\n",
        "kmeans.fit(normalized_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "id": "CyNCuqbqTs45",
        "outputId": "8d0d198d-a500-4fa1-fe0d-c6612157ccd7"
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KMeans(n_clusters=3, random_state=42)"
            ],
            "text/html": [
              "<style>#sk-container-id-2 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: #000;\n",
              "  --sklearn-color-text-muted: #666;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-2 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-2 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-2 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: flex;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "  align-items: start;\n",
              "  justify-content: space-between;\n",
              "  gap: 0.5em;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 label.sk-toggleable__label .caption {\n",
              "  font-size: 0.6rem;\n",
              "  font-weight: lighter;\n",
              "  color: var(--sklearn-color-text-muted);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-2 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-2 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-2 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-2 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 0.5em;\n",
              "  text-align: center;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-2 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-2 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=3, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>KMeans</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.cluster.KMeans.html\">?<span>Documentation for KMeans</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>KMeans(n_clusters=3, random_state=42)</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"Cluster\"] = kmeans.labels_"
      ],
      "metadata": {
        "id": "oS2rMh5aUczs"
      },
      "execution_count": 75,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print (\"Data with Custer Labels\")\n",
        "print(df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xpaddVpsWjZz",
        "outputId": "5c072e30-d96b-4e97-8a3c-c854220b380f"
      },
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Data with Custer Labels\n",
            "   Flight_No  Distance  Average_Delay  Passenger_Load  Cluster\n",
            "0          1       500             10              85        2\n",
            "1          2       300              5              90        2\n",
            "2          3      1500             25              70        0\n",
            "3          4       750              0              95        1\n",
            "4          5      1100             15              60        0\n",
            "5          6       400             20              80        2\n",
            "6          7       600              5              75        2\n",
            "7          8       900             30              50        0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "plt.scatter(df[\"Distance\"], df[\"Average_Delay\"], c=df[\"Cluster\"], cmap=\"rainbow\", alpha=0.7)\n",
        "plt.title(\"K-Means Clustering of Delta Air Lines Flight\", fontsize=14)\n",
        "plt.xlabel(\"Distance\", fontsize=12)\n",
        "plt.ylabel(\"Average_Delay\", fontsize=1)\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        },
        "id": "dNS-yClxW4RM",
        "outputId": "4c4e7002-b9cf-4dcc-8950-debf07539118"
      },
      "execution_count": 77,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "metadata": {
        "id": "lUKgktswbGaU"
      },
      "execution_count": 78,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np"
      ],
      "metadata": {
        "id": "Md4xQYN1bfKP"
      },
      "execution_count": 79,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "ic762LeVbnKc"
      },
      "execution_count": 81,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv(\"Forecast.csv\")"
      ],
      "metadata": {
        "id": "Qe2JT-P0cB58"
      },
      "execution_count": 82,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(df.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dgUajybicWxG",
        "outputId": "a2a0fbab-d2f2-4119-df53-f61162003615"
      },
      "execution_count": 83,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Month  On_Time_Percentage \n",
            "0  January                   85\n",
            "1  Febuary                   80\n",
            "2    March                   88\n",
            "3    April                   90\n",
            "4      May                   87\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.DataFrame({\n",
        "    \"Date\": [\"January\", \"Febuary\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"], \"On_Time_Percentage\": [85, 80, 88, 90, 87, 92, 85, 78, 83, 90, 89, 91]\n",
        "\n",
        "})"
      ],
      "metadata": {
        "id": "nF2_Zoqtfk0e"
      },
      "execution_count": 89,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"Month\"] = pd.date_range(start=\"2023-01-01\", periods=12, freq=\"M\")\n",
        "df .set_index(\"Month\", inplace=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HyTRSZ-BgN-P",
        "outputId": "f23ee7a5-7020-42b7-92a3-ee093554608b"
      },
      "execution_count": 87,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-87-cc8df51582b1>:1: FutureWarning: 'M' is deprecated and will be removed in a future version, please use 'ME' instead.\n",
            "  df[\"Month\"] = pd.date_range(start=\"2023-01-01\", periods=12, freq=\"M\")\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e1xfxz1-iBqx",
        "outputId": "ca154656-8927-4533-d813-4f4ff4ef97d1"
      },
      "execution_count": 90,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "         Date  On_Time_Percentage\n",
            "0     January                  85\n",
            "1     Febuary                  80\n",
            "2       March                  88\n",
            "3       April                  90\n",
            "4         May                  87\n",
            "5        June                  92\n",
            "6        July                  85\n",
            "7      August                  78\n",
            "8   September                  83\n",
            "9     October                  90\n",
            "10   November                  89\n",
            "11   December                  91\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "plt.plot(df.index, df[\"On_Time_Percentage\"], marker=\"o\", linestyle=\"-\", color=\"b\")\n",
        "plt.title(\"Monthly On_Time_Percentage\", fontsize=14)\n",
        "plt.xlabel(\"Month\", fontsize=12)\n",
        "plt.ylabel(\"On_Time_Percentage (%)\", fontsize=12)\n",
        "plt.ylim(0, 100)\n",
        "plt.xticks(rotation=45)\n",
        "plt.grid()\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        },
        "id": "yG6rBx4rj0H2",
        "outputId": "737df6e5-65ee-4ca5-b2c3-b219fa913a0f"
      },
      "execution_count": 91,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA90AAAJOCAYAAACqS2TfAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAdx9JREFUeJzt3Xd4FNXbxvF7Uwg1dEICBELvICpFgYDSEalKExFRUUFEBBFBBAVRQQQsgIIUlaI0KYr09gOUqnRFOtJLElpImfeP8yYQkkBYMiy7+X6uay/NzOzmWTLJ7D1z5jkOy7IsAQAAAACAVOfl6gIAAAAAAPBUhG4AAAAAAGxC6AYAAAAAwCaEbgAAAAAAbELoBgAAAADAJoRuAAAAAABsQugGAAAAAMAmhG4AAAAAAGxC6AYAAAAAwCaEbgCA23nuuefkcDh08ODBFG2/cuVKORwODRw40Na63NXBgwflcDj03HPPuboUAAA8DqEbANKYuIDlcDiUN29eRUdHJ7nd7t2747crVKjQPa3RXUPy1q1b1alTJxUuXFgZMmRQ1qxZ9dBDD+n9999XWFjYPalh0qRJ8T+3lDzcPWgXKlQowfvx9vZWrly5VK9ePf3888+uLu+eiPuZT5o0ydWlAACS4OPqAgAAruHj46OTJ0/ql19+0ZNPPplo/YQJE+TlxbnZlHr//fc1cOBA+fj4qH79+nr66ad15coVrVy5Uu+9957GjBmjefPm6eGHH7a1jooVK+q9995LsOzgwYOaPHmyKlSooGbNmiXaPl++fNq9e7eyZs1qa2128fb2Vv/+/SVJ165d0549ezRv3jwtWbJEw4cP15tvvuniCgEAaRmhGwDSqEceeUR//vmnvv3220ShOzo6Wt9//73q1KmjVatWuahC9/Hll1/qvffeU+HChbVw4UKVLFkywfpx48apa9euatiwobZu3aoCBQrYVkvFihVVsWLFBMtWrlypyZMnq2LFismOHri5Znfi4+OT6H0tXrxYDRo00IABA/TKK68oY8aMrikOAJDmcQkDANKoDBkyqE2bNlq4cKFOnTqVYN2CBQt08uRJPf/888k+/9KlS3rvvfdUsmRJpU+fXjly5FDjxo31v//9L9G2AwcOlMPh0MqVKzV16lRVrFhRGTJkUGBgoF5//XVduXIlwba1a9eWJA0aNCjB0OGb7+G2LEujR49WyZIl5efnp4IFC2rQoEGKjY295XuPjY1VwYIFlTNnTkVGRia5Tc2aNeXj46OjR4/e8rXOnz+vvn37Kl26dJo/f36S4bVLly7q06ePzp49q379+iVYV6tWLTkcDkVFRWngwIEqVKiQ/Pz8VLx4cX311Ve3/N6pJbl7uuNqi4yM1DvvvKPg4GBlyJBBDz74oJYuXSpJCgsLU9euXRUUFKT06dOrWrVq+uOPP5L8PqdOndIbb7yhokWLys/PT7ly5VLLli21Y8eOVH9P9erVU4kSJXT58mXt3Lkzfvlff/2lNm3aKDAwUOnSpVPBggX12muv6ezZswmef+O/ye7du9W8eXPlzJkz0X74888/q169esqZM6fSp0+vQoUKqUOHDone07Vr1zRixAhVqlRJmTJlUpYsWVSjRg3NmzcvUe1xPQsOHDhw2/37ueeeU6dOnSRJnTp1SvD7Emfz5s3q1q2bypYtq6xZsypDhgwqV66cPvroI0VFRSX577dq1SrVrFlTmTJlUs6cOdW6dWsdOXIkfp+4mWVZ+vbbb/Xoo4/K399fGTNm1EMPPaRvv/32Fj8lAEgbuNINAGnY888/r3Hjxum7775LMAT322+/VY4cORINRY5z9epVPfbYY/rjjz9UqVIl9ejRQydPntSMGTP022+/adq0aXrqqacSPe+LL77QokWL1LRpUz322GNatGiRRo8erTNnzuiHH36QZIJe3HDo0NBQ1apVK/752bJlS/B6vXv31qpVq/TEE0+ofv36mjt3rgYOHKhr165pyJAhyb5vLy8vvfDCCxowYIBmzZqldu3aJVi/d+9erVmzRo0bN1b+/Plv+W84c+ZMRUREqE2bNipdunSy2/Xu3VsjRozQ9OnTNXbs2ERXXtu2bas//vhDDRs2lLe3t3788Ud17dpVvr6+evHFF29Zg91at26t7du368knn9SVK1f0ww8/6IknntD//vc/vfTSS7p27ZqeeuopnT59WjNmzFCDBg104MCBBMPV//33X9WqVUtHjx5VvXr11KxZM506dUqzZs3Sb7/9pmXLlqlKlSq21B8XEufNm6enn35aXl5eatq0qQoUKKBdu3bpiy++0G+//abff/9d2bNnT/Dcffv2qWrVqipXrpyee+45nT17VunSpZMkvfnmmxoxYkT870qePHl05MgRLV26VA8++KDKli0r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+3Y98cQTri4RbubChQvau3evzpw5o969e0uSxo8frx9//FE1atRQ//79OZEDp1iWpcOHD2vbtm2SpCFDhujXX3/VTz/9pC+++EJt2rTRpEmTXFoj3Fu6dOl08uTJ+M9WlmWpaNGi+uSTT1SyZEnNnDlT8+fPd3GVsBOh+z4X98vZqFEj7d27V5988okuXrwoyfzCZs+eXe+++67Wr1+v1atXu7JUuJGAgAB9//33qlGjhiTFd8TPly+fvLwS/lmI29+AOxH3t8vb21srV66UJM2ePVsxMTEqUKCA1qxZoz/++MOFFcLd5MmTR48//rjmzZunf/75R2+88YbKly+vBg0aqHv37qpTp46WLVummJgYhmjijtSrV0958+bV008/rVatWundd9/VnDlztHjxYi1YsEBt2rTR5MmTdfbsWfYt3LGYmBhFRUUpf/78OnfuXHwDyNjYWAUHB+vdd99VdHR0fF8deCZCt5soUqSIfvzxR/3www96++23debMmfgPtb6+vipfvryyZs3q4irhTooVKybJ/NH39fWVZE7knDp1Kn6boUOH6uuvv1Z0dLRLaoT7ivtg+thjj8nPz0+vvvqqfvnlF23evFmDBw/WqlWrNHHiRF29etXFlcJdOBwOvfnmm5o4caIWLlyYYMqw/PnzKyAgQLt27ZKXlxcjdXBHQkJC9P3332vIkCEqW7asWrZsqaZNm8rhcChPnjwKCgrS+fPnlSlTJvYtpFjcBQ1vb2/5+vqqY8eOmjNnjsaNGyeHwyEvLy/FxMSocOHCGjp0qH766af4vifwPD6uLgApV7t2bf3000966qmndPz4cT399NMqX768pkyZolOnTqlAgQKuLhFuyMvLK8H923FXugcMGKDBgwdr69at8vHhTwXuTNz+FBISok6dOikgIEALFixQSEiIQkJC5HA4VKFCBaVPn97FlcKdPPTQQ/r1118VGhqqr7/+WoULF1aZMmUkmdtmihcvrujo6PgTiUBKxf1tGj9+vDZt2qRr164pXbp0kqSTJ0+qUKFC8SEKuJ2///5b8+fPV7t27RQYGChJCg0N1ccff6w33nhDGTNm1AsvvCBvb29J5pbREiVKKFOmTK4sGzbik7SbadKkidatW6eePXuqT58+8vHxkbe3txYuXKj8+fO7ujy4qbjQ7ePjowIFCmj48OH65JNPtGnTJlWoUMHV5cGNVatWTePHj9dDDz2k8uXLx+9rzZo1c3VpcFM1atTQypUr1bZtWz3//PMqV66crl27pnnz5mnt2rUEbtyVRx55RL169dKoUaOUN29e7dixQxMnTtTq1asJREiRffv2qVq1ajp//rzOnj2rnj17KleuXJKkV155RZcuXdJLL72kQ4cOqUWLFipYsKB++uknRUVFsY95MLqXu6nw8HCdO3dOERERCgwMjP9lBu7GkCFD9O6778rf319Lly7VQw895OqS4AFiY2MT9QoA7tbevXv1/fffa8OGDSpWrJheffVVlS1b1tVlwQOsWLFCL774ory8vJQvXz6NGjVK5cuXd3VZcAOXLl1S9+7dFRsbq4cffljdunVTr1691Lt3b+XOnVuSOSZ+//336tOnj7y9vZUlSxaFh4dr/vz5qlSpkovfAexC6AYQb9OmTapcubJ27Nih0qVLu7ocALituNkXOLGD1HTu3DlFRUXJz89P2bJlc3U5cBNXrlzRxIkTlTNnTrVu3Vo//vij2rRpkyh4S9LBgwd1+PBhXb58WeXKlVO+fPlcWDnsRugGkMClS5cY3gQAAOCEmz9HzZgxQ23bttWbb76pPn36KFeuXIqOjtZ///2n4OBgF1aKe4l7ugEkQOAGAABwTtznqJiYGHl5eal169ayLEvt2rWTw+FQjx49NHz4cB06dEhTpkxRxowZ6YqfBnClGwAAAABSmWVZsixLXl5emjFjhjp06KDChQvr33//1caNG1WxYkVXl4h7hNANAAAAADaIi1oOh0OPP/64tm3bppUrV6pcuXIurgz3EsPLAQAAAMAGDodDMTEx6t27t1asWKFt27YRuNMgWn0CAAAAgI3KlCmjLVu2MP1cGsXwcgAAAACwkWVZNExLw7jSDQAAAAA2InCnbYRuAAAAAABsQugGAAAAAMAmhG4AAAAAAGxC6AYAAAAAwCaEbgAAAAAAbELoBgAAAADAJoRuAABwzzgcDnXr1s3VZQAAcM8QugEA8BCTJk2Sw+GQw+HQ2rVrE623LEsFChSQw+HQE088YVsd69at08CBA3XhwgXbvgcAAO6C0A0AgIdJnz69pk6dmmj5qlWrdPToUfn5+dn6/detW6dBgwYRugEAEKEbAACP06hRI/3000+Kjo5OsHzq1Kl68MEHlTdvXhdVBgBA2kPoBgDAw7Rt21Znz57VkiVL4pddu3ZNM2fOVLt27RJtf+nSJb355psqUKCA/Pz8VKJECQ0fPlyWZSXYLu5+7Llz56ps2bLy8/NTmTJltGjRovhtBg4cqN69e0uSQkJC4oe7Hzx4MMFr3eo1AADwJIRuAAA8TKFChVStWjVNmzYtftmvv/6qsLAwtWnTJsG2lmXpySef1GeffaYGDRpoxIgRKlGihHr37q2ePXsmeu21a9fq1VdfVZs2bfTJJ5/o6tWratmypc6ePStJatGihdq2bStJ+uyzz/Tdd9/pu+++U+7cuVP8GgAAeBIfVxcAAABSX7t27dS3b19duXJFGTJk0A8//KDQ0FAFBQUl2G7evHlavny5Bg8erH79+kmSunbtqqeeekqjRo1St27dVKRIkfjtd+/erV27dsUvq127tipUqKBp06apW7duKl++vCpVqqRp06apWbNmKlSoUKLabvcaAAB4Eq50AwDggZ5++mlduXJFCxYsUEREhBYsWJDk0PJffvlF3t7e6t69e4Llb775pizL0q+//ppgeZ06dRKE8PLly8vf31/79+9PcW2p8RoAALgLrnQDAOCBcufOrTp16mjq1Km6fPmyYmJi1KpVq0TbHTp0SEFBQcqSJUuC5aVKlYpff6Pg4OBEr5E9e3adP38+xbWlxmsAAOAuCN0AAHiodu3a6cUXX9SJEyfUsGFDZcuW7a5f09vbO8nlNzdds/s1AABwFwwvBwDAQzVv3lxeXl7asGFDkkPLJalgwYL677//FBERkWD5nj174tffKYfDcefFAgDgoQjdAAB4qMyZM2vMmDEaOHCgmjRpkuQ2jRo1UkxMjL744osEyz/77DM5HA41bNjwjr9vpkyZJEkXLly44+cCAOBpGF4OAIAH69ix4y3XN2nSRLVr11a/fv108OBBVahQQYsXL9bPP/+sHj16JGh4llIPPvigJKlfv35q06aNfH191aRJk/gwDgBAWkLoBgAgDfPy8tK8efM0YMAAzZgxQxMnTlShQoU0bNgwvfnmm0695sMPP6wPPvhAY8eO1aJFixQbG6sDBw4QugEAaZLDomsJAAAAAAC24J5uAAAAAABsQugGAAAAAMAmhG4AAAAAAGxC6AYAAAAAwCaEbgAAAAAAbELoBgAAAADAJoRuAAAAAABsQugGAAAAAMAmhG4AAAAAAGxC6AYAAAAAwCaEbgAAAAAAbELoBgAAAADAJoRuAAAAAABs8n86GeLXFTyz8QAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install statsmodels"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zytFw05Nn2YS",
        "outputId": "969056b0-a502-4cda-ac47-7ee3a2305138"
      },
      "execution_count": 93,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: statsmodels in /usr/local/lib/python3.10/dist-packages (0.14.4)\n",
            "Requirement already satisfied: numpy<3,>=1.22.3 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (1.26.4)\n",
            "Requirement already satisfied: scipy!=1.9.2,>=1.8 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (1.13.1)\n",
            "Requirement already satisfied: pandas!=2.1.0,>=1.4 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (2.2.2)\n",
            "Requirement already satisfied: patsy>=0.5.6 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (1.0.1)\n",
            "Requirement already satisfied: packaging>=21.3 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (24.2)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas!=2.1.0,>=1.4->statsmodels) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas!=2.1.0,>=1.4->statsmodels) (2024.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas!=2.1.0,>=1.4->statsmodels) (2024.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas!=2.1.0,>=1.4->statsmodels) (1.17.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n",
        "df = pd.DataFrame({\n",
        "    \"Date\": [\"January\", \"Febuary\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"], \"On_Time_Percentage\": [85, 80, 88, 90, 87, 92, 85, 78, 83, 90, 89, 91]\n",
        "\n",
        "})\n",
        "df[\"Month\"] = pd.date_range(start=\"2023-01-01\", periods=12, freq=\"M\")\n",
        "df .set_index(\"Month\", inplace=True)\n",
        "data = df[\"On_Time_Percentage\"]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YBU2p5sPoBMX",
        "outputId": "00f26c9c-3d35-43c4-8389-4caa11c4cf7e"
      },
      "execution_count": 96,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-96-e820ad7e62e4>:8: FutureWarning: 'M' is deprecated and will be removed in a future version, please use 'ME' instead.\n",
            "  df[\"Month\"] = pd.date_range(start=\"2023-01-01\", periods=12, freq=\"M\")\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "plot_acf(data, lags=5)\n",
        "plt.title(\"Autocorrelation Function (ACF) of On_Time_Percentage\")\n",
        "plt.xlabel(\"Lag\")\n",
        "plt.ylabel(\"Correlation\")\n",
        "plt.grid(True)\n",
        "plt.show()\n",
        "\n",
        "plt.figure(figsize=(10, 6))\n",
        "plot_pacf(data, lags=5)\n",
        "plt.title(\"Partial Autocorrelation Function (PACF) of On_Time_Percentage\")\n",
        "plt.xlabel(\"Lag\")\n",
        "plt.ylabel(\"Correlation\")\n",
        "plt.grid(True)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 962
        },
        "id": "bQwyyP2Fkp93",
        "outputId": "43923de0-6e76-4ecb-f18a-76eeff880e24"
      },
      "execution_count": 99,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 0 Axes>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 0 Axes>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "metadata": {
        "id": "5KAxeL1eFpbO"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np"
      ],
      "metadata": {
        "id": "ipoVuvDHH4NM"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "A2VFKunBH9_8"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "OM5wJRA9KLed"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "id": "eRjTwJ6uI85W"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "oSq16a5RDL_T"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "pQh5rXAMDLpa"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# !pip install --upgrade google-auth-oauthlib gspread pandas"
      ],
      "metadata": {
        "id": "RAAj2HGTC0E0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 2. Import necessary libraries\n",
        "from google.colab import auth\n",
        "import gspread\n",
        "from google.auth import default\n",
        "import pandas as pd\n",
        "\n",
        "# 3. Define the loading function with updated authentication\n",
        "def load_sheets_data():\n",
        "    try:\n",
        "        # Authenticate\n",
        "        auth.authenticate_user()\n",
        "        creds, _ = default()\n",
        "\n",
        "        # Create gspread client\n",
        "        gc = gspread.authorize(creds)\n",
        "\n",
        "        # Your sheet URL\n",
        "        sheet_url = 'https://docs.google.com/spreadsheets/d/1H753saUHzNYbyBwLifcXe-92yXG9kM1mWh5Xv9Rmlyk/edit?usp=drive_link'\n",
        "\n",
        "        # Extract sheet ID and open\n",
        "        sheet_id = sheet_url.split('/')[5]\n",
        "        sheet = gc.open_by_key(sheet_id)\n",
        "\n",
        "        # Get first worksheet\n",
        "        worksheet = sheet.get_worksheet(0)\n",
        "\n",
        "        # Get all data\n",
        "        data = worksheet.get_all_records()\n",
        "\n",
        "        # Convert to DataFrame\n",
        "        df = pd.DataFrame(data)\n",
        "        return df\n",
        "\n",
        "    except Exception as e:\n",
        "        print(f\"Error: {e}\")\n",
        "        return None\n",
        "\n",
        "# 4. Load the data\n",
        "df = load_sheets_data()\n",
        "\n",
        "# 5. Check results\n",
        "if df is not None:\n",
        "    print(\"\\nData loaded successfully!\")\n",
        "    print(\"\\nFirst few rows:\")\n",
        "    print(df.head())\n",
        "    print(\"\\nDataFrame info:\")\n",
        "    print(df.info())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GN2JhdLuDtfR",
        "outputId": "72f16b6f-3073-4e54-9605-b8e6b99ac73e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Data loaded successfully!\n",
            "\n",
            "First few rows:\n",
            "   Flight No  Distance  Average Delay  Passenger Load\n",
            "0          1       500             10              85\n",
            "1          2       300              5              90\n",
            "2          3      1500             25              70\n",
            "3          4       750              0              95\n",
            "4          5      1100             15              60\n",
            "\n",
            "DataFrame info:\n",
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 8 entries, 0 to 7\n",
            "Data columns (total 4 columns):\n",
            " #   Column          Non-Null Count  Dtype\n",
            "---  ------          --------------  -----\n",
            " 0   Flight No       8 non-null      int64\n",
            " 1   Distance        8 non-null      int64\n",
            " 2   Average Delay   8 non-null      int64\n",
            " 3   Passenger Load  8 non-null      int64\n",
            "dtypes: int64(4)\n",
            "memory usage: 384.0 bytes\n",
            "None\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "i-nS-6eFDw8R"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}